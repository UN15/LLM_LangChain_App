퀴즈2
1.  LLM의 도구 사용 결정 정확도를 높이기 위해 실제 예시를 제공하는 기법은 무엇인가요?
    A. 온도(Temperature) 값 조절
    B. Batch 실행 방식 활용
    C. Verbose 모드 활성화
    D. Few-shot 프롬프팅
답: D

2.  랭그래프(LangGraph)는 어떤 목적으로 설계된 라이브러리일까요?
    A. 데이터베이스 관리 및 최적화
    B. 복잡한 에이전트 기반 워크플로우 구축
    C. 대규모 언어 모델 자체 학습
    D. 단순 텍스트 기반 입출력 처리
답:B
3.  상태 그래프(StateGraph)의 가장 기본적인 세 가지 구성 요소는 무엇인가요?
    A. 시작점(Start), 끝점(End), 도구(Tool)
    B. 입력(Input), 출력(Output), 처리(Process)
    C. 상태(State), 노드(Node), 엣지(Edge)
    D. 프롬프트(Prompt), 모델(Model), 파서(Parser)
답:C
4.  상태 그래프(StateGraph)에서 '노드(Node)'는 어떤 역할을 하며 '상태(State)'와 어떻게 상호작용하나요?
    A. 그래프의 시작점을 표시하고 초기 상태를 설정해요.
    B. 현재 상태를 입력받아 작업을 수행하고, 상태를 업데이트해요.
    C. 노드 간의 연결 방식을 정의하고 실행 순서를 관리해요.
    D. 그래프 실행 결과를 최종적으로 취합하여 반환해요.
답:B
5.  상태 그래프(StateGraph)에서 '상태(State)'가 중요한 이유는 무엇인가요?
    A. 각 노드가 독립적인 작업 공간을 가지도록 하기 위해
    B. 그래프 내에서 노드들이 공유하는 데이터와 워크플로우의 진행 상황을 담기 위해
    C. 그래프의 시각화를 위한 메타데이터를 저장하기 위해
    D. 외부 시스템 호출 시 필요한 인증 정보를 관리하기 위해
답:B
6.  상태 그래프(StateGraph)에서 워크플로우의 실행 경로를 특정 상태 값에 따라 동적으로 바꾸고 싶을 때 사용하는 기능은 무엇인가요?
    A. 일반 엣지(Edge) 연결
    B. 그래프 컴파일(Compile)
    C. 조건부 엣지(Conditional Edge)
    D. 시작 노드(Start Node) 설정
답:C
7.  LangGraph에서 리듀서(Reducer)의 주요 역할은 무엇인가요?
    A. 노드의 실행 순서를 정의한다.
    B. 그래프의 최종 결과를 시각화한다.
    C. 그래프 상태(State)가 업데이트되는 방식을 결정한다.
    D. 외부 API 호출을 관리한다.
답:C
8.  LangGraph의 메시지 그래프(Message Graph)가 제공하는 주요 기능은 무엇인가요?
    A. 복잡한 계산 작업을 병렬 처리한다.
    B. 대화형 챗봇의 메시지 기록을 효율적으로 관리한다.
    C. 데이터베이스 스키마를 자동으로 생성한다.
    D. 사용자 인증 및 권한 부여를 처리한다.
답:B
9.  LangGraph에서 피드백 루프가 무한히 반복되는 것을 방지하기 위한 일반적인 방법은 무엇인가요?
    A. 모든 엣지에 타임아웃 설정
    B. 루프 내에서 실행 횟수 제한 설정
    C. 그래프 실행 시 별도 스레드 사용
    D. 상태(State) 값을 변경하지 않도록 설정
답:B
10.  ReAct 에이전트의 핵심 동작 방식은 무엇인가요?
    A. 추론만 반복한다.
    B. 행동만 반복한다.
    C. 추론 후 행동하고 그 결과를 바탕으로 다시 추론한다.
    D. 사전 정의된 규칙대로만 순차 실행한다
답:C